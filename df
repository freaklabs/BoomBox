warning: CRLF will be replaced by LF in sw/sketches/boomboxMain/boomboxMain.ino.
The file will have its original line endings in your working directory
[1mdiff --git a/sw/sketches/boomboxMain/boomboxMain.ino b/sw/sketches/boomboxMain/boomboxMain.ino[m
[1mindex 9fb18fe..4b9d3ad 100644[m
[1m--- a/sw/sketches/boomboxMain/boomboxMain.ino[m
[1m+++ b/sw/sketches/boomboxMain/boomboxMain.ino[m
[36m@@ -5,16 +5,14 @@[m [mUses trailcam to trigger sound effects[m
 #include "boombox.h"[m
 #include "chibi.h"[m
 [m
[31m-//hey, this is a test[m
[31m-[m
 // customize MAX_SOUNDS based on number of samples in MP3 lib[m
[31m-#define MAX_SOUNDS 30   [m
[32m+[m[32m#define MAX_SOUNDS 5[m[41m   [m
 [m
 // delay for delayTime milliseconds after trigger occurs[m
 uint32_t delayTime = 0;        [m
 [m
 // play sound and then wait for durationTime milliseconds[m
[31m-uint32_t durationTime = 60000;   [m
[32m+[m[32muint32_t durationTime = 30000;[m[41m   [m
 [m
 // delay for offDelay milliseconds after sound finishes playing[m
 uint32_t offDelayTime = 30000;[m
[36m@@ -26,17 +24,8 @@[m [mint index = 0;[m
 /************************************************************/[m
 void setup() [m
 {[m
[31m-    chibiCmdInit(57600);[m
[31m-[m
[31m-    // add commands here[m
[31m-    chibiCmdAdd("play", cmdPlay);[m
[31m-    chibiCmdAdd("stop", cmdStop);[m
[31m-    chibiCmdAdd("vol", cmdSetVolume);[m
[31m-    chibiCmdAdd("pause", cmdPause);[m
[31m-    chibiCmdAdd("resume", cmdResume);[m
[31m-    chibiCmdAdd("sleep", cmdSleep);[m
[31m-    chibiCmdAdd("shutdown", cmdShutdown);[m
[31m-    [m
[32m+[m[32m    Serial.begin(57600);[m
[32m+[m[41m        [m
     // initialize system[m
     bb.init();[m
     [m
[36m@@ -51,8 +40,6 @@[m [mvoid setup()[m
 /************************************************************/[m
 void loop() [m
 {[m
[31m-    chibiCmdPoll();[m
[31m-  [m
     // check if auxiliary (trailcam) event has triggered[m
     if (bb.isAuxEvent() == true)[m
     {[m
[36m@@ -96,103 +83,3 @@[m [mvoid loop()[m
     // an interrupt occurred. wake up![m
     bb.wake();[m
 }[m
[31m-[m
[31m-/************************************************************/[m
[31m-// command line functions[m
[31m-/************************************************************/[m
[31m-[m
[31m-/*-----------------------------------------------------------*/[m
[31m-// [m
[31m-/*-----------------------------------------------------------*/[m
[31m-void cmdPlay(int arg_cnt, char **args)[m
[31m-{[m
[31m-  uint8_t file = chibiCmdStr2Num(args[1], 10);[m
[31m-  bb.play(file);[m
[31m-}[m
[31m-[m
[31m-/*-----------------------------------------------------------*/[m
[31m-// [m
[31m-/*-----------------------------------------------------------*/[m
[31m-void cmdSetVolume(int arg_cnt, char **args)[m
[31m-{[m
[31m-  uint8_t vol = chibiCmdStr2Num(args[1], 10);[m
[31m-  bb.setVol(vol);[m
[31m-}[m
[31m-[m
[31m-/*-----------------------------------------------------------*/[m
[31m-// [m
[31m-/*-----------------------------------------------------------*/[m
[31m-void cmdPause(int arg_cnt, char **args)[m
[31m-{[m
[31m-  bb.pause();[m
[31m-}[m
[31m-[m
[31m-/*-----------------------------------------------------------*/[m
[31m-// [m
[31m-/*-----------------------------------------------------------*/[m
[31m-void cmdResume(int arg_cnt, char **args)[m
[31m-{[m
[31m-  bb.resume();[m
[31m-}[m
[31m-[m
[31m-/*-----------------------------------------------------------*/[m
[31m-// [m
[31m-/*-----------------------------------------------------------*/[m
[31m-void cmdStop(int arg_cnt, char **args)[m
[31m-{[m
[31m-  bb.stop();[m
[31m-}[m
[31m-[m
[31m-/*-----------------------------------------------------------*/[m
[31m-// [m
[31m-/*-----------------------------------------------------------*/[m
[31m-void cmdShutdown(int arg_cnt, char **args)[m
[31m-{[m
[31m-    // shut down everything else[m
[31m-    digitalWrite(bb.pinBoostEnb, LOW);[m
[31m-    digitalWrite(bb.pinMp3Enb, LOW);[m
[31m-    digitalWrite(bb.pinCurrEnb, LOW);[m
[31m-    digitalWrite(bb.pinRangeEnb, LOW);[m
[31m-    digitalWrite(bb.pinPIREnb, LOW);[m
[31m-    digitalWrite(bb.pinAmpShutdn, LOW);[m
[31m-[m
[31m-    delay(500);[m
[31m-[m
[31m-    digitalWrite(bb.pinBoostEnb, HIGH);[m
[31m-    digitalWrite(bb.pinMp3Enb, HIGH);[m
[31m-    digitalWrite(bb.pinCurrEnb, HIGH);[m
[31m-    digitalWrite(bb.pinRangeEnb, HIGH);[m
[31m-    digitalWrite(bb.pinPIREnb, HIGH);[m
[31m-    digitalWrite(bb.pinAmpShutdn, HIGH);[m
[31m-[m
[31m-    Serial.println("Playing");[m
[31m-    delay(500);[m
[31m-    bb.play(1);[m
[31m-}[m
[31m-[m
[31m-[m
[31m-/*-----------------------------------------------------------*/[m
[31m-// [m
[31m-/*-----------------------------------------------------------*/[m
[31m-void cmdSleep(int arg_cnt, char **args)[m
[31m-{[m
[31m-  bb.sleep();[m
[31m-[m
[31m-  // need to wake up if you sleep. [m
[31m-  // can only wake up from external interrupt, [m
[31m-  // ie: button push or motion event[m
[31m-  bb.wake();[m
[31m-[m
[31m-  bb.play(1);[m
[31m-}[m
[31m-[m
[31m-/*-----------------------------------------------------------*/[m
[31m-// [m
[31m-/*-----------------------------------------------------------*/[m
[31m-void cmdSetDelay(int arg_cnt, char **args)[m
[31m-{[m
[31m-    uint8_t delayVal = chibiCmdStr2Num(args[1], 10);[m
[31m-    bb.delaySet(delayVal);[m
[31m-    Serial.print("Delay has been set to: ");[m
[31m-    Serial.println(bb.delayGet());[m
[31m-}[m
